@model int
@{
    ViewData["Title"] = "Add Comment";
    string userId = User.FindFirst(x => x.Type == "UserId").Value;
}

<div class="row">

    <div class="col-sm-0 col-lg-2 col-xxl-3"></div>
    <div class="col-sm-12 col-lg-8 col-xxl-6">
        <div class="container mt-4">
            <h1>Add Comment</h1>
            <form asp-controller="Comment" asp-action="AddComment" method="post">
                <input type="hidden" name="TopicId" value="@Model" />
                <input type="hidden" name="UserId" value="@userId" />
                <div class="form-group">
                    <label for="CommentText">Comment:</label>
                    <textarea id="CommentText" name="CommentText" class="form-control" rows="4" name="CommentText"></textarea>
                </div>
                <button type="submit" class="btn btn-primary mt-3">Add Comment</button>
            </form>
        </div>
    </div>
    <div class="col-sm-0 col-lg-2 col-xxl-3"></div>

</div>
<script>
    fetch('badwords.json')
        .then(response => response.json())
        .then(data => {
            const badWords = data.badWords;
            const textarea = document.getElementById('CommentText');

            function containsBadWords(text) {
                for (let word of badWords) {
                    if (text.includes(word)) {
                        return true;
                    }
                }
                return false;
            }

            textarea.addEventListener('blur', () => {
                const text = textarea.value;
                if (containsBadWords(text)) {
                    alert('Hey, no bad words!');
                    textarea.value = '';
                }
            });
        })
        .catch(error => console.error('Error loading bad words:', error));
</script>